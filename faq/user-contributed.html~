<!--#set var="title" value="User Contributed - Frequently Asked Questions" -->
<!--#include virtual="../inc/header.html" --> 

<h1>Frequently Asked Questions: User Contributed</h1>
<p>The following instructions were provided by our users 
but are not supported by the SRCF.</p>

<h3 id="submit">How do I submit a FAQ?</h3>
<p>Email the publicity officer: publicity@srcf.net</p>

<h3 id="mediawiki">How to set up MediaWiki for use with Raven on the SRCF</h3>
<p>Contributed by Nicholas Wilson and edited, htmlified and tested by Daniel Thomas if you have difficulties with this or find a bug in it please contact Daniel Thomas (drt24) as these instructions are not supported by the SRCF</p>
<p>Alternate instructions can be found on the <a href="https://wiki.csx.cam.ac.uk/raven/Mediawiki">Raven Wiki's page for MediaWiki</a> but these appear to be for a previous version</p>

<ol>
 <li>
  The easiest method to do this is to start by logging in to the <a href="../desktop">desktop service.</a>, you should also read our <a href="basics">basics page</a> first. 
 </li>

<li>
 You will need to install Mediawiki separately for each society or personal site. 
 Get a MySQL or PostgreSQL database for your society or user if you haven't already by following the <a href="./databases">database FAQ.</a><br/>
 <a href="http://www.mediawiki.org/wiki/Download">Download MediaWiki</a>, it comes as a zip file. 
 Make a folder "wiki" under public_html in your society folder and unpack the MediaWiki zip file there (so you have a public_html/wiki/includes and so on).
</li>
<li>
 If you want your whole site to be the wiki and so you want all connections to the base of your site ot be redirected to the wiki. Add a special file in public_html (next to wiki) called ".htaccess" with the following contents:
<pre>
Options +FollowSymlinks
AAAlwaysDecode On

RewriteEngine On
RewriteBase /&lt;socname&gt;
RewriteRule ^wiki/requireRaven/(.*)$ w/$1 [R,L]
RewriteCond %{QUERY_STRING} ^title=Special:UserLogin&returnto=(.*)$
RewriteRule ^wiki/.*$ wiki/requireRaven/%1 [R,L]
RewriteRule ^w/Special:UserLogin wiki/requireRaven/index.php [R,L]
RewriteRule ^w/(.*)$ wiki/index.php?title=$1 [PT,L,QSA]
RewriteRule ^w/?$ wiki/index.php [L,QSA]
RewriteRule ^/?$ wiki/index.php [L,QSA]
</pre>
Here <tt>&lt;socname&gt;</tt> is the abbreviation which forms part of the url for your site, for example 'The Society for Foo' might have a <tt>&lt;socname&gt;</tt> of <tt>foosoc</tt>. <tt>&lt;Society Name&gt;</tt> refers to the full name of the society e.g. 'The Society for Foo' and <tt>&lt;Site Name&gt;</tt> refers to the name of the website e.g. "The Society for Foo's Website".<br/>
If you don't want your whole site to be a wiki you can add additional directory and for example have a folder <tt>~/&lt;socname&gt;/w/</tt> with a folder <tt>~/&lt;socname&gt;/w/wiki</tt>, inside it and put the .htaccess file in the <tt>~/&lt;socname&gt;/w/</tt> folder instead and change <tt>RewriteBase /&lt;socname&gt;</tt> to: <tt>RewriteBase /&lt;socname&gt;/w/</tt> 
</li>

<li>Add a folder called "requireRaven" in wiki and add a file called ".htaccess" there with contents:
<pre>
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=permanent]

AADescription "&lt;Site Name&gt;"
AuthType WebAuth
Require valid-user
</pre>
</li>
<li>
 Browse to your site's main page and click the link to configure the wiki but DO NOT FILL IN THE FORM.
</li>
<li>Open a terminal (if you are not already using, one see Applications -> Accessories -> Terminal on the desktop service or use the <a href="../terminal/">Ajax Terminal</a>) and type (without the dolar signs):
<pre>
$ mkdir ~/&lt;socname&gt;/public_html/wiki/config
$ umask 0007
$ touch ~/&lt;socname&gt;/public_html/wiki/config/LocalSettings.php
$ chgrp &lt;socname&gt; ~/&lt;socname&gt;/public_html/wiki/config/LocalSettings.php
$ umask 0002
</pre>
(This is so that the file is secret right from the start; if we let the MW installation script create the file, it will be world-readable for a few seconds, allowing a malicious process a brief window to get a read handle on it and steal your password.)
</li>
<li>
Now fill in the form. Pick a strong password and write it down so you don't forget it. (running something like <tt>apg -a 1 -n 1 -m 16 -E \"\'</tt> will generate a strong password) Trying to select  a creative commons licence may accidentally submit the form without input checking so if you want to do that, do it last.
</li>


<li>
Move your LocalSettings.php file from the config folder up one directory. Modify or add to the existing sections to look like these:

<pre>
## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/&lt;socname&gt;/wiki";
$wgScriptExtension  = ".php";
$wgArticlePath = "/&lt;socname&gt;/w/$1";  # Virtual path (left part of first rewrite rule). MUST be DIFFERENT from the path above!
$wgUsePathInfo = true;
</pre>
<ol><li>
To allow file uploads (photos, sound, videos, and so on), play around with this section:
<pre>
## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
$wgStrictFileExtensions = false;
$wgFileExtensions = array_merge( $wgFileExtensions, array( 'pdf', 'mp3', 'svg', 'ogg' ) );
$wgAllowTitlesInSVG = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
</pre>
Note that because of the way the SRCF is set up, it is absolutely vital to add these lines to prevent users uploading world-writable files:
<pre>
$wgDirectoryMode = 0775;
umask(0002);
</pre>
</li>
<li>
To get the Raven authentication to work, add these lines:
<pre>
require_once "$IP/extensions/AutoREMOTEUSER/AutoREMOTEUSER.php";
$wgAuth = new Auth_remoteuser();
</pre>
</li>
<li>
To disable editing by anonomous users (i.e. those not logged in via Raven):
<pre>
#Anonymous users can't edit pages
$wgGroupPermissions['*']['edit'] = false;
$wgShowIPinHeader = false;
# Anonymous users can't create pages
$wgGroupPermissions['*']['createpage'] = false;
</pre>
</li>
</ol>
<li>
Now you will need to actually install the extension: add <a href="user-contrib/AutoREMOTEUSER.php">this file</a> to wiki/extensions/AutoREMOTEUSER/. Note that you must use the provided customised version, not the upstream one, whatever version it is at.
</li>
</ol>
<p>
There is quite a lot of further configuring that will need to be done, but the rest is generic (for example you will want to make <tt>$wgLogo</tt> point to your logo for the site and <tt>$wgFavicon</tt> point to a favicon for the site). Errors you may get:
</p> 
<ul>
<li>
Problems with images, or automated emails about world-writable files, will be because you didn't follow the instructions 8.1.<!-- This may change as the file does. CHECKME -->
</li><li>
Double check that LocalSettings.php is not world-readable.
<pre>
$ stat LocalSettings.php
</pre>
Should say something like: <tt>Access: (0660/-rw-rw----)  Uid: ...</tt> somewhere in its output.
</li>
<li>
All the files should be group writable and owned by the society user (for society accounts) see <a href="managing-socaccount.html">FAQ: Managing Society Accounts</a>
</li>
</ul>

<h3 id="tomcat">How to run Apache Tomcat on the SRCF</h3>
<p>Contributed by Richard Whitehouse and edited, htmlified and tested by Daniel Thomas if you have difficulties with this or find a bug in it please contact Daniel Thomas (drt24) as these instructions are not supported by the SRCF</p>

<ol>
 <li>In a SSH shell outside of the public_html directory (in /societies/SOCNAME/):
  <ol>
   <li>
    Download the latest version (last updated 2010-02-01 <a href="http://tomcat.apache.org/index.html">check this is still the right version</a>):
    <pre>
wget http://mirror.ox.ac.uk/sites/rsync.apache.org/tomcat/tomcat-6/v6.0.24/bin/apache-tomcat-6.0.24.tar.gz
    </pre>
   </li>
   <li>
    Extract it:
    <pre>
tar -xvvzf apache-tomcat-6.0.24.tar.gz 
    </pre>
   </li>
   <li>
    Move it to somewhere sensible:
    <pre>
mv apache-tomcat-6.0.24 tomcat
    </pre>
   </li>
   <li>
    Set the permissions to something more sensible.
    <pre>
chmod -R g+rw tomcat
    </pre>
   </li>
   <li>
    Edit the server file:
    <pre>
vim tomcat/conf/server.xml
    </pre>
   </li>
   <li>
    Find:
    <pre>
&lt;Connector port="8080" protocol="HTTP/1.1" 
        connectionTimeout="20000" 
        redirectPort="8443" /&gt;
    </pre>
   </li>
   <li>
    Replace with:
    <pre>
&lt;Connector address="127.0.0.1" port="PORTNUMBER" protocol="HTTP/1.1" 
        connectionTimeout="20000" 
        redirectPort="8443" /&gt;
    </pre>
    replacing PORTNUMBER with a arbitrarily selected large unused port. (>1024 and <a href="http://www.iana.org/assignments/port-numbers">not in use</a>).
   </li>

   <li>
    It is no longer necessary to use php scripts to start and stop the tomcat server. Now it is possible to use sudo -u as follows:<br/>
    Start the server using:
    <pre>
      sudo -u <i>socuser</i> tomcat/bin/startup.sh
    </pre>
    And stop the server using:
    <pre>
      sudo -u <i>socuser</i> tomcat/bin/shutdown.sh
    </pre>
    where <i>socuser</i> is the name of the society user that you are admin of.
   </li>
 </li>
 <li>
  Inside the directory you want pointing at the Tomcat server:<br/>
  Create the following .htaccess file
  <pre>
RewriteEngine on
RewriteRule (.*) http://localhost:PORTNUMBER/$1 [P]
  </pre>
  where PORTNUMBER is the portnumber selected earlier.<br/>
  Obviously you can change this to the application required on the Tomcat server.
 </li>
 <li>
   To start the server, run:
   <pre>
     sudo -u <i>socuser</i> tomcat/bin/startup.sh
   </pre>
   where <i>socuser</i> is the name of the society user that you are admin of.
   </li>
   <li>
    Visit SOCNAME.soc.srcf.net/tomcat/ to check tomcat is running (Assuming you are redirecting to tomcat from the /tomcat/ directory).
   </li>
   <li>
    When you want to stop tomcat run:
    <pre>
      sudo -u <i>socuser</i> tomcat/bin/shutdown.sh
    </pre>
   </li>
</ol>

<h3 id="soc-imap">Enable society IMAP inboxes on srcf.net maildomain</h3>
<p>
Contributed by Ian Abel and edited, and tested by Daniel Thomas if you have difficulties with this or find a bug in it please contact Daniel Thomas (drt24) as these instructions are not supported by the SRCF.
</p>
<ol>
<li>Don't do this if you don't understand Exim forward files or IMAP subfolders or heaven forbid, symlinks and unix permissions.</li>
<li>Make a directory in <tt>~SOCNAME</tt> named 'mail' (name is not required, but makes sense, don't burden future admins with puzzles), with permissions <tt>u+rwx g+rws</tt></li>
<li>Add a line to the society .forward such as '<tt>save $home/mail/mailbox_name</tt>' (or '<tt>unseen save $home/mail/mailbox_name</tt>' if you want it to get delivered as normal as well).</li>
<li>Each society admin that wishes to read this mail should make sure they have a directory named 'mail' (name <B>is</B> important) in their home directory</li>
<li>run <pre>ln -s /societies/socname/mail/mailbox_name /home/CRSid/mail/</pre> to create the mailbox in their mailbox namespace</li>
<li>Use the <a href="email#reading">normal IMAP instructions</a> to connect to CRSid's inbox, and then 'mail/mailbox_name' is a subfolder that you can subscribe to</li>
</ol>


<!--#include virtual="../inc/footer.html" -->
